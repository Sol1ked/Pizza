{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aprim\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\pizza\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\n// @ts-nocheck\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport qs from 'qs';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport Sort, { sortItems } from '../components/Sort.jsx';\nimport PizzaBlock from '../components/PizzaBlock';\nimport Skeleton from '../components/PizzaBlock/Skeleton';\nimport { SearchContext } from 'context/SearchContext';\nimport Pagination from 'components/Pagination';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCategoryId, setCurrentPage, setFiltersParams } from '../redux/slices/filterSlice';\nimport { fetchPizzas } from '../redux/slices/pizzaSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    categoryId,\n    sort,\n    currentPage\n  } = useSelector(state => state.filter);\n  const {\n    items,\n    status\n  } = useSelector(state => state.pizza);\n  const dispatch = useDispatch();\n  const {\n    searchValue\n  } = useContext(SearchContext);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const isChangeSearchParam = useRef(false);\n  const isFirstMount = useRef(false);\n  const onChangeCategory = id => {\n    dispatch(setCategoryId(id));\n  };\n  const fetchData = () => {\n    const url = 'https://650ec8a054d18aabfe9976df.mockapi.io/items';\n    const replaceSortType = sort.type.replace('+', '');\n    const replaceSortTypeFirstSymbol = sort.type.includes('+') ? 'asc' : 'desc';\n    const categorySort = categoryId > 0 ? `category=${categoryId}` : '';\n    const searchParam = searchValue ? `&search=${searchValue}` : ''; //добавил параметр для поиска\n    //TODO - переделать выпадающий список в сортировке, добавить икони вверх вниз, вместо строчек\n\n    dispatch(fetchPizzas({\n      url,\n      replaceSortType,\n      replaceSortTypeFirstSymbol,\n      categorySort,\n      searchParam,\n      currentPage\n    }));\n  };\n  useEffect(() => {\n    if (searchParams.size > 0) {\n      const urlParams = qs.parse(searchParams.toString());\n      const sort = sortItems.find(obj => obj.type === urlParams.sortType);\n      dispatch(setFiltersParams({\n        ...urlParams,\n        sort\n      }));\n      isChangeSearchParam.current = true;\n    }\n  }, []);\n  useEffect(() => {\n    if (isFirstMount.current) {\n      const queryString = qs.stringify({\n        sortType: sort.type,\n        categoryId,\n        currentPage\n      });\n      navigate(`?${queryString}`);\n    }\n    isFirstMount.current = true;\n  }, [categoryId, sort.type, currentPage]);\n  useEffect(() => {\n    if (!isChangeSearchParam.current) {\n      fetchData();\n    }\n    isChangeSearchParam.current = false;\n  }, [categoryId, sort.type, searchValue, currentPage]);\n  const skeletons = [...new Array(6)].map((_, index) => /*#__PURE__*/_jsxDEV(Skeleton, {}, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 57\n  }, this));\n  const pizzas = items.map(item => /*#__PURE__*/_jsxDEV(PizzaBlock, {\n    ...item\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 38\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__top\",\n      children: [/*#__PURE__*/_jsxDEV(Categories, {\n        categoryId: categoryId,\n        onChangeCategory: onChangeCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sort, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"content__title\",\n      children: \"\\u0412\\u0441\\u0435 \\u043F\\u0438\\u0446\\u0446\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), status === 'error', /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__items\",\n      children: status === 'Идёт загрузка...' ? skeletons : pizzas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      forcePage: currentPage,\n      onPageChange: number => dispatch(setCurrentPage(number))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"zasxSAGwc+5ly//2PnVKFHHHDR8=\", false, function () {\n  return [useNavigate, useSelector, useSelector, useDispatch, useSearchParams];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useContext","useEffect","useRef","useState","axios","qs","useNavigate","useSearchParams","Categories","Sort","sortItems","PizzaBlock","Skeleton","SearchContext","Pagination","useDispatch","useSelector","setCategoryId","setCurrentPage","setFiltersParams","fetchPizzas","jsxDEV","_jsxDEV","Home","_s","navigate","categoryId","sort","currentPage","state","filter","items","status","pizza","dispatch","searchValue","searchParams","setSearchParams","isChangeSearchParam","isFirstMount","onChangeCategory","id","fetchData","url","replaceSortType","type","replace","replaceSortTypeFirstSymbol","includes","categorySort","searchParam","size","urlParams","parse","toString","find","obj","sortType","current","queryString","stringify","skeletons","Array","map","_","index","fileName","_jsxFileName","lineNumber","columnNumber","pizzas","item","className","children","forcePage","onPageChange","number","_c","$RefreshReg$"],"sources":["C:/Users/aprim/Рабочий стол/pizza/src/pages/Home.jsx"],"sourcesContent":["// @ts-nocheck\r\nimport React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport qs from 'qs';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport Categories from '../components/Categories';\r\nimport Sort, { sortItems } from '../components/Sort.jsx';\r\nimport PizzaBlock from '../components/PizzaBlock';\r\nimport Skeleton from '../components/PizzaBlock/Skeleton';\r\nimport { SearchContext } from 'context/SearchContext';\r\nimport Pagination from 'components/Pagination';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setCategoryId, setCurrentPage, setFiltersParams } from '../redux/slices/filterSlice';\r\nimport { fetchPizzas } from '../redux/slices/pizzaSlice';\r\n\r\nexport default function Home() {\r\n  const navigate = useNavigate();\r\n  const { categoryId, sort, currentPage } = useSelector((state) => state.filter);\r\n  const { items, status } = useSelector((state) => state.pizza);\r\n  const dispatch = useDispatch();\r\n\r\n  const { searchValue } = useContext(SearchContext);\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const isChangeSearchParam = useRef(false);\r\n  const isFirstMount = useRef(false);\r\n\r\n  const onChangeCategory = (id) => {\r\n    dispatch(setCategoryId(id));\r\n  };\r\n\r\n  const fetchData = () => {\r\n    const url = 'https://650ec8a054d18aabfe9976df.mockapi.io/items';\r\n    const replaceSortType = sort.type.replace('+', '');\r\n    const replaceSortTypeFirstSymbol = sort.type.includes('+') ? 'asc' : 'desc';\r\n    const categorySort = categoryId > 0 ? `category=${categoryId}` : '';\r\n    const searchParam = searchValue ? `&search=${searchValue}` : ''; //добавил параметр для поиска\r\n    //TODO - переделать выпадающий список в сортировке, добавить икони вверх вниз, вместо строчек\r\n\r\n    dispatch(\r\n      fetchPizzas({\r\n        url,\r\n        replaceSortType,\r\n        replaceSortTypeFirstSymbol,\r\n        categorySort,\r\n        searchParam,\r\n        currentPage,\r\n      }),\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (searchParams.size > 0) {\r\n      const urlParams = qs.parse(searchParams.toString());\r\n      const sort = sortItems.find((obj) => obj.type === urlParams.sortType);\r\n\r\n      dispatch(\r\n        setFiltersParams({\r\n          ...urlParams,\r\n          sort,\r\n        }),\r\n      );\r\n      isChangeSearchParam.current = true;\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isFirstMount.current) {\r\n      const queryString = qs.stringify({\r\n        sortType: sort.type,\r\n        categoryId,\r\n        currentPage,\r\n      });\r\n      navigate(`?${queryString}`);\r\n    }\r\n    isFirstMount.current = true;\r\n  }, [categoryId, sort.type, currentPage]);\r\n\r\n  useEffect(() => {\r\n    if (!isChangeSearchParam.current) {\r\n      fetchData();\r\n    }\r\n    isChangeSearchParam.current = false;\r\n  }, [categoryId, sort.type, searchValue, currentPage]);\r\n\r\n  const skeletons = [...new Array(6)].map((_, index) => <Skeleton key={index} />);\r\n  const pizzas = items.map((item) => <PizzaBlock key={item.id} {...item} />);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"content__top\">\r\n        <Categories categoryId={categoryId} onChangeCategory={onChangeCategory} />\r\n        <Sort />\r\n      </div>\r\n      <h2 className=\"content__title\">Все пиццы</h2>\r\n      {status === 'error'}\r\n      <div className=\"content__items\">{status === 'Идёт загрузка...' ? skeletons : pizzas}</div>\r\n      <Pagination\r\n        forcePage={currentPage}\r\n        onPageChange={(number) => dispatch(setCurrentPage(number))}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}