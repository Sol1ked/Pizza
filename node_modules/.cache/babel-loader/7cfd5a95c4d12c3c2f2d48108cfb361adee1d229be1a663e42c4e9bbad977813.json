{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aprim\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\pizza\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport Categories from '../components/Categories';\nimport Sort from '../components/Sort.jsx';\nimport PizzaBlock from '../components/PizzaBlock';\nimport Skeleton from '../components/PizzaBlock/Skeleton';\nimport { SearchContext } from 'context/SearchContext';\nimport ReactPaginate from 'react-paginate';\n\n// мой вариант поиска\n// const [filterItems, setFilterItems] = useState([]);\n// const [isError, setIsError] = useState(false);\n// const handleSearchItems = () => {\n//   if (searchValue.trim() !== '') {\n//     const filteredItems = items.filter((el) =>\n//       el.title.toLowerCase().includes(searchValue.toLowerCase()),\n//     );\n//     if (filteredItems.length > 0) {\n//       setFilterItems(filteredItems);\n//       setIsError(false);\n//     } else {\n//       setIsError(true);\n//       setFilterItems(items);\n//     }\n//   } else {\n//     setIsError(false);\n//     setFilterItems(items);\n//   }\n// };\n\n// useEffect(() => {\n//   handleSearchItems();\n// }, [searchValue]);\n\n// setFilterItems(data);\n\n// const pizzas = filterItems.map((item) => <PizzaBlock key={item.id} {...item} />);\n\n// {isLoading ? skeletons : <>{!isError ? pizzas : 'По вашему запросу ничего не неайдено'}</>}\n\n// мой вариант поиска\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [items, setItems] = useState([]);\n  const {\n    searchValue,\n    setSearchValue\n  } = useContext(SearchContext);\n  const [isLoading, setIsLoading] = useState(true);\n  const [category, setCategory] = React.useState(0);\n  const [sort, setSort] = useState({\n    title: 'популярности',\n    type: 'rating'\n  });\n  const fetchData = async () => {\n    setIsLoading(true);\n    const url = 'https://650ec8a054d18aabfe9976df.mockapi.io/items';\n    const replaceSortType = sort.type.replace('+', '');\n    const replaceSortTypeFirstSymbol = sort.type.startsWith('+') ? 'asc' : 'desc';\n    const categorySort = category > 0 ? `category=${category}` : '';\n    const searchParam = searchValue ? `&search=${searchValue}` : ''; //добавил параметр для поиска\n\n    //TODO - переделать выпадающий список в сортировке, добавить икони вверх вниз, вместо строчек\n\n    await fetch(`${url}?${categorySort}&sortBy=${replaceSortType}&order=${replaceSortTypeFirstSymbol}${searchParam}`).then(res => {\n      return res.json();\n    }).then(data => {\n      setItems(data);\n      setIsLoading(false);\n    });\n  };\n  useEffect(() => {\n    fetchData();\n    window.scrollTo(0, 0);\n  }, [category, sort, searchValue]);\n  const skeletons = [...new Array(6)].map((_, index) => /*#__PURE__*/_jsxDEV(Skeleton, {}, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 57\n  }, this));\n  const pizzas = items.map(item => /*#__PURE__*/_jsxDEV(PizzaBlock, {\n    ...item\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 38\n  }, this));\n  const handlePageClick = event => {\n    const newOffset = event.selected * itemsPerPage % items.length;\n    console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n    setItemOffset(newOffset);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__top\",\n      children: [/*#__PURE__*/_jsxDEV(Categories, {\n        category: category,\n        handleCategory: i => setCategory(i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sort, {\n        sort: sort,\n        handleSort: i => setSort(i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"content__title\",\n      children: \"\\u0412\\u0441\\u0435 \\u043F\\u0438\\u0446\\u0446\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__items\",\n      children: [isLoading ? skeletons : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: pizzas.length ? pizzas : 'По вашему запросу ничего не найдено ( '\n      }, void 0, false), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        breakLabel: \"...\",\n        nextLabel: \"next >\",\n        onPageChange: handlePageClick,\n        pageRangeDisplayed: 5,\n        pageCount: pageCount,\n        previousLabel: \"< previous\",\n        renderOnZeroPageCount: null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"5/hnhPxK3k8QJgB6rwuCKHE7Gio=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Categories","Sort","PizzaBlock","Skeleton","SearchContext","ReactPaginate","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","items","setItems","searchValue","setSearchValue","isLoading","setIsLoading","category","setCategory","sort","setSort","title","type","fetchData","url","replaceSortType","replace","replaceSortTypeFirstSymbol","startsWith","categorySort","searchParam","fetch","then","res","json","data","window","scrollTo","skeletons","Array","map","_","index","fileName","_jsxFileName","lineNumber","columnNumber","pizzas","item","id","handlePageClick","event","newOffset","selected","itemsPerPage","length","console","log","setItemOffset","className","children","handleCategory","i","handleSort","breakLabel","nextLabel","onPageChange","pageRangeDisplayed","pageCount","previousLabel","renderOnZeroPageCount","_c","$RefreshReg$"],"sources":["C:/Users/aprim/Рабочий стол/pizza/src/pages/Home.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport Categories from '../components/Categories';\r\nimport Sort from '../components/Sort.jsx';\r\nimport PizzaBlock from '../components/PizzaBlock';\r\nimport Skeleton from '../components/PizzaBlock/Skeleton';\r\nimport { SearchContext } from 'context/SearchContext';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\n// мой вариант поиска\r\n// const [filterItems, setFilterItems] = useState([]);\r\n// const [isError, setIsError] = useState(false);\r\n// const handleSearchItems = () => {\r\n//   if (searchValue.trim() !== '') {\r\n//     const filteredItems = items.filter((el) =>\r\n//       el.title.toLowerCase().includes(searchValue.toLowerCase()),\r\n//     );\r\n//     if (filteredItems.length > 0) {\r\n//       setFilterItems(filteredItems);\r\n//       setIsError(false);\r\n//     } else {\r\n//       setIsError(true);\r\n//       setFilterItems(items);\r\n//     }\r\n//   } else {\r\n//     setIsError(false);\r\n//     setFilterItems(items);\r\n//   }\r\n// };\r\n\r\n// useEffect(() => {\r\n//   handleSearchItems();\r\n// }, [searchValue]);\r\n\r\n// setFilterItems(data);\r\n\r\n// const pizzas = filterItems.map((item) => <PizzaBlock key={item.id} {...item} />);\r\n\r\n// {isLoading ? skeletons : <>{!isError ? pizzas : 'По вашему запросу ничего не неайдено'}</>}\r\n\r\n// мой вариант поиска\r\n\r\nexport default function Home() {\r\n  const [items, setItems] = useState([]);\r\n\r\n  const { searchValue, setSearchValue } = useContext(SearchContext);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [category, setCategory] = React.useState(0);\r\n  const [sort, setSort] = useState({\r\n    title: 'популярности',\r\n    type: 'rating',\r\n  });\r\n\r\n  const fetchData = async () => {\r\n    setIsLoading(true);\r\n    const url = 'https://650ec8a054d18aabfe9976df.mockapi.io/items';\r\n    const replaceSortType = sort.type.replace('+', '');\r\n    const replaceSortTypeFirstSymbol = sort.type.startsWith('+') ? 'asc' : 'desc';\r\n    const categorySort = category > 0 ? `category=${category}` : '';\r\n    const searchParam = searchValue ? `&search=${searchValue}` : ''; //добавил параметр для поиска\r\n\r\n    //TODO - переделать выпадающий список в сортировке, добавить икони вверх вниз, вместо строчек\r\n\r\n    await fetch(\r\n      `${url}?${categorySort}&sortBy=${replaceSortType}&order=${replaceSortTypeFirstSymbol}${searchParam}`,\r\n    )\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setItems(data);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    window.scrollTo(0, 0);\r\n  }, [category, sort, searchValue]);\r\n\r\n  const skeletons = [...new Array(6)].map((_, index) => <Skeleton key={index} />);\r\n  const pizzas = items.map((item) => <PizzaBlock key={item.id} {...item} />);\r\n\r\n  const handlePageClick = (event) => {\r\n    const newOffset = (event.selected * itemsPerPage) % items.length;\r\n    console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\r\n    setItemOffset(newOffset);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"content__top\">\r\n        <Categories category={category} handleCategory={(i) => setCategory(i)} />\r\n        <Sort sort={sort} handleSort={(i) => setSort(i)} />\r\n      </div>\r\n      <h2 className=\"content__title\">Все пиццы</h2>\r\n      <div className=\"content__items\">\r\n        {isLoading ? (\r\n          skeletons\r\n        ) : (\r\n          <>{pizzas.length ? pizzas : 'По вашему запросу ничего не найдено ( '}</>\r\n        )}\r\n        <ReactPaginate\r\n          breakLabel=\"...\"\r\n          nextLabel=\"next >\"\r\n          onPageChange={handlePageClick}\r\n          pageRangeDisplayed={5}\r\n          pageCount={pageCount}\r\n          previousLabel=\"< previous\"\r\n          renderOnZeroPageCount={null}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}