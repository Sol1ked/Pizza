{"ast":null,"code":"const {\n  createSlice\n} = require('@reduxjs/toolkit');\nconst initialState = {\n  totalPrice: 0,\n  items: []\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    // addProductInCart(state, action) {\n    //   state.items.push(action.payload);\n    //   state.totalPrice += action.payload.price;\n    // },\n    addProductInCart(state, action) {\n      const findItem = state.items.find(item => item.id === action.payload.id);\n      if (findItem) {\n        findItem.count++;\n      } else {\n        state.items.push({\n          ...action.payload.item\n        });\n      }\n    },\n    removeProductFromCart(state, action) {\n      state.items.filter(product => product.id !== action.payload.id);\n    },\n    clearAllProducts(state, action) {\n      state.items.length = 0;\n    }\n  }\n});\nexport const {\n  addProductInCart,\n  removeProductFromCart,\n  clearAllProducts\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","require","initialState","totalPrice","items","cartSlice","name","reducers","addProductInCart","state","action","findItem","find","item","id","payload","count","push","removeProductFromCart","filter","product","clearAllProducts","length","actions","reducer"],"sources":["C:/Users/aprim/Рабочий стол/pizza/src/redux/slices/cartSlice.js"],"sourcesContent":["const { createSlice } = require('@reduxjs/toolkit');\r\n\r\nconst initialState = {\r\n  totalPrice: 0,\r\n  items: [],\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState,\r\n  reducers: {\r\n    // addProductInCart(state, action) {\r\n    //   state.items.push(action.payload);\r\n    //   state.totalPrice += action.payload.price;\r\n    // },\r\n    addProductInCart(state, action) {\r\n      const findItem = state.items.find((item) => item.id === action.payload.id);\r\n      if (findItem) {\r\n        findItem.count++;\r\n      } else {\r\n        state.items.push({\r\n          ...action.payload.item,\r\n        });\r\n      }\r\n    },\r\n    removeProductFromCart(state, action) {\r\n      state.items.filter((product) => product.id !== action.payload.id);\r\n    },\r\n    clearAllProducts(state, action) {\r\n      state.items.length = 0;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addProductInCart, removeProductFromCart, clearAllProducts } = cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,MAAM;EAAEA;AAAY,CAAC,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAEnD,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAE,CAAC;EACbC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC5BM,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACR;IACA;IACA;IACA;IACAC,gBAAgBA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC9B,MAAMC,QAAQ,GAAGF,KAAK,CAACL,KAAK,CAACQ,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MAC1E,IAAIH,QAAQ,EAAE;QACZA,QAAQ,CAACK,KAAK,EAAE;MAClB,CAAC,MAAM;QACLP,KAAK,CAACL,KAAK,CAACa,IAAI,CAAC;UACf,GAAGP,MAAM,CAACK,OAAO,CAACF;QACpB,CAAC,CAAC;MACJ;IACF,CAAC;IACDK,qBAAqBA,CAACT,KAAK,EAAEC,MAAM,EAAE;MACnCD,KAAK,CAACL,KAAK,CAACe,MAAM,CAAEC,OAAO,IAAKA,OAAO,CAACN,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;IACnE,CAAC;IACDO,gBAAgBA,CAACZ,KAAK,EAAEC,MAAM,EAAE;MAC9BD,KAAK,CAACL,KAAK,CAACkB,MAAM,GAAG,CAAC;IACxB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEd,gBAAgB;EAAEU,qBAAqB;EAAEG;AAAiB,CAAC,GAAGhB,SAAS,CAACkB,OAAO;AAC9F,eAAelB,SAAS,CAACmB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}