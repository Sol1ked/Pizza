{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aprim\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\pizza\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport qs from 'qs';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport Sort from '../components/Sort.jsx';\nimport PizzaBlock from '../components/PizzaBlock';\nimport Skeleton from '../components/PizzaBlock/Skeleton';\nimport { SearchContext } from 'context/SearchContext';\nimport Pagination from 'components/Pagination';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCategoryId, setCurrentPage } from '../redux/slices/filterSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    categoryId,\n    sort,\n    currentPage\n  } = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n  const [items, setItems] = useState([]);\n  const {\n    searchValue\n  } = useContext(SearchContext);\n  const [isLoading, setIsLoading] = useState(true);\n  const onChangeCategory = id => {\n    dispatch(setCategoryId(id));\n  };\n  const fetchData = async () => {\n    setIsLoading(true);\n    const url = 'https://650ec8a054d18aabfe9976df.mockapi.io/items';\n    const replaceSortType = sort.type.replace('+', '');\n    const replaceSortTypeFirstSymbol = sort.type.startsWith('+') ? 'asc' : 'desc';\n    const categorySort = categoryId - 1 > 0 ? `category=${categoryId}` : '';\n    const searchParam = searchValue ? `&search=${searchValue}` : ''; //добавил параметр для поиска\n    //TODO - переделать выпадающий список в сортировке, добавить икони вверх вниз, вместо строчек\n\n    axios.get(`${url}?p=${currentPage}&l=4&${categorySort}&sortBy=${replaceSortType}&order=${replaceSortTypeFirstSymbol}${searchParam}`).then(res => {\n      setItems(res.data);\n      setIsLoading(false);\n    });\n  };\n  useEffect(() => {\n    if (searchParams.size > 0) {\n      console.log(searchParams);\n    }\n  }, [searchParams]);\n  useEffect(() => {\n    const queryString = qs.stringify({\n      sortType: sort.type,\n      categoryId,\n      currentPage\n    });\n    navigate(`?${queryString}`);\n  }, [categoryId, sort.type, currentPage]);\n  useEffect(() => {\n    fetchData();\n  }, [categoryId, sort.type, searchValue, currentPage]);\n  const skeletons = [...new Array(6)].map((_, index) => /*#__PURE__*/_jsxDEV(Skeleton, {}, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 57\n  }, this));\n  const pizzas = items.map(item => /*#__PURE__*/_jsxDEV(PizzaBlock, {\n    ...item\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 38\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__top\",\n      children: [/*#__PURE__*/_jsxDEV(Categories, {\n        categoryId: categoryId,\n        onChangeCategory: onChangeCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sort, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"content__title\",\n      children: \"\\u0412\\u0441\\u0435 \\u043F\\u0438\\u0446\\u0446\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__items\",\n      children: isLoading ? skeletons : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: pizzas.length ? pizzas : /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginBottom: '16px'\n          },\n          children: \"\\u041F\\u043E \\u0432\\u0430\\u0448\\u0435\\u043C\\u0443 \\u0437\\u0430\\u043F\\u0440\\u043E\\u0441\\u0443 \\u043D\\u0438\\u0447\\u0435\\u0433\\u043E \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      forcePage: currentPage,\n      onPageChange: number => dispatch(setCurrentPage(number))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"YBrLVBnDkH7vr3jOWySqRKRWVOw=\", false, function () {\n  return [useNavigate, useSelector, useDispatch];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useContext","useEffect","useState","axios","qs","useNavigate","useSearchParams","Categories","Sort","PizzaBlock","Skeleton","SearchContext","Pagination","useDispatch","useSelector","setCategoryId","setCurrentPage","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","navigate","categoryId","sort","currentPage","state","filter","dispatch","items","setItems","searchValue","isLoading","setIsLoading","onChangeCategory","id","fetchData","url","replaceSortType","type","replace","replaceSortTypeFirstSymbol","startsWith","categorySort","searchParam","get","then","res","data","searchParams","size","console","log","queryString","stringify","sortType","skeletons","Array","map","_","index","fileName","_jsxFileName","lineNumber","columnNumber","pizzas","item","className","children","length","style","marginBottom","forcePage","onPageChange","number","_c","$RefreshReg$"],"sources":["C:/Users/aprim/Рабочий стол/pizza/src/pages/Home.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport qs from 'qs';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport Categories from '../components/Categories';\r\nimport Sort from '../components/Sort.jsx';\r\nimport PizzaBlock from '../components/PizzaBlock';\r\nimport Skeleton from '../components/PizzaBlock/Skeleton';\r\nimport { SearchContext } from 'context/SearchContext';\r\nimport Pagination from 'components/Pagination';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setCategoryId, setCurrentPage } from '../redux/slices/filterSlice';\r\n\r\nexport default function Home() {\r\n  const navigate = useNavigate();\r\n  const { categoryId, sort, currentPage } = useSelector((state) => state.filter);\r\n  const dispatch = useDispatch();\r\n  const [items, setItems] = useState([]);\r\n  const { searchValue } = useContext(SearchContext);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const onChangeCategory = (id) => {\r\n    dispatch(setCategoryId(id));\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    setIsLoading(true);\r\n    const url = 'https://650ec8a054d18aabfe9976df.mockapi.io/items';\r\n    const replaceSortType = sort.type.replace('+', '');\r\n    const replaceSortTypeFirstSymbol = sort.type.startsWith('+') ? 'asc' : 'desc';\r\n    const categorySort = categoryId - 1 > 0 ? `category=${categoryId}` : '';\r\n    const searchParam = searchValue ? `&search=${searchValue}` : ''; //добавил параметр для поиска\r\n    //TODO - переделать выпадающий список в сортировке, добавить икони вверх вниз, вместо строчек\r\n\r\n    axios\r\n      .get(\r\n        `${url}?p=${currentPage}&l=4&${categorySort}&sortBy=${replaceSortType}&order=${replaceSortTypeFirstSymbol}${searchParam}`,\r\n      )\r\n      .then((res) => {\r\n        setItems(res.data);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (searchParams.size > 0) {\r\n      console.log(searchParams);\r\n    }\r\n  }, [searchParams]);\r\n\r\n  useEffect(() => {\r\n    const queryString = qs.stringify({\r\n      sortType: sort.type,\r\n      categoryId,\r\n      currentPage,\r\n    });\r\n    navigate(`?${queryString}`);\r\n  }, [categoryId, sort.type, currentPage]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [categoryId, sort.type, searchValue, currentPage]);\r\n\r\n  const skeletons = [...new Array(6)].map((_, index) => <Skeleton key={index} />);\r\n  const pizzas = items.map((item) => <PizzaBlock key={item.id} {...item} />);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"content__top\">\r\n        <Categories categoryId={categoryId} onChangeCategory={onChangeCategory} />\r\n        <Sort />\r\n      </div>\r\n      <h2 className=\"content__title\">Все пиццы</h2>\r\n      <div className=\"content__items\">\r\n        {isLoading ? (\r\n          skeletons\r\n        ) : (\r\n          <>\r\n            {pizzas.length ? (\r\n              pizzas\r\n            ) : (\r\n              <p style={{ marginBottom: '16px' }}>По вашему запросу ничего не найдено </p>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n      <Pagination\r\n        forcePage={currentPage}\r\n        onPageChange={(number) => dispatch(setCurrentPage(number))}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}