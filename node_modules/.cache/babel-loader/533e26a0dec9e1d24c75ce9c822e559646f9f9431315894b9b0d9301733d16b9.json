{"ast":null,"code":"var _s = $RefreshSig$();\nimport { configureStore } from '@reduxjs/toolkit';\nimport filter from './slices/filterSlice';\nimport cart from './slices/cartSlice';\nimport pizza from './slices/pizzaSlice';\nimport { useDispatch } from 'react-redux';\nexport const store = configureStore({\n  reducer: {\n    filter,\n    cart,\n    pizza\n  }\n});\n\n//Возвращает тип всего redux'а\n\nexport const useAppDispatch = () => {\n  _s();\n  return useDispatch();\n};\n_s(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"names":["configureStore","filter","cart","pizza","useDispatch","store","reducer","useAppDispatch","_s"],"sources":["C:/Users/aprim/Рабочий стол/pizza/src/redux/store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport filter from './slices/filterSlice';\r\nimport cart from './slices/cartSlice';\r\nimport pizza from './slices/pizzaSlice';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    filter,\r\n    cart,\r\n    pizza,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>; //Возвращает тип всего redux'а\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport const useAppDispatch = () => useDispatch();\r\n"],"mappings":";AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAO,MAAMC,KAAK,GAAGL,cAAc,CAAC;EAClCM,OAAO,EAAE;IACPL,MAAM;IACNC,IAAI;IACJC;EACF;AACF,CAAC,CAAC;;AAEyD;;AAG3D,OAAO,MAAMI,cAAc,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMJ,WAAW,CAAC,CAAC;AAAA;AAACI,EAAA,CAArCD,cAAc;EAAA,QAASH,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}