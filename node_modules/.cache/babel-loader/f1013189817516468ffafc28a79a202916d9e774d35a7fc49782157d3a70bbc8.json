{"ast":null,"code":"const {\n  createSlice,\n  createAsyncThunk\n} = require('@reduxjs/toolkit');\nconst fetchUserById = createAsyncThunk('pizza/fetchByIdStatus', async (userId, thunkAPI) => {\n  const response = await userAPI.fetchById(userId);\n  return response.data;\n});\nconst initialState = {\n  items: []\n};\nconst pizzaSlice = createSlice({\n  name: 'pizza',\n  initialState,\n  reducers: {\n    setItems(state, action) {\n      state.items = action.payload;\n    }\n  }\n});\nexport const {\n  setItems\n} = pizzaSlice.actions;\nexport default pizzaSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","require","fetchUserById","userId","thunkAPI","response","userAPI","fetchById","data","initialState","items","pizzaSlice","name","reducers","setItems","state","action","payload","actions","reducer"],"sources":["C:/Users/aprim/Рабочий стол/pizza/src/redux/slices/pizzaSlice.js"],"sourcesContent":["const { createSlice, createAsyncThunk } = require('@reduxjs/toolkit');\r\n\r\nconst fetchUserById = createAsyncThunk(\r\n  'pizza/fetchByIdStatus',\r\n  async (userId: number, thunkAPI) => {\r\n    const response = await userAPI.fetchById(userId);\r\n    return response.data;\r\n  },\r\n);\r\n\r\nconst initialState = {\r\n  items: [],\r\n};\r\n\r\nconst pizzaSlice = createSlice({\r\n  name: 'pizza',\r\n  initialState,\r\n  reducers: {\r\n    setItems(state, action) {\r\n      state.items = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setItems } = pizzaSlice.actions;\r\nexport default pizzaSlice.reducer;\r\n"],"mappings":"AAAA,MAAM;EAAEA,WAAW;EAAEC;AAAiB,CAAC,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAErE,MAAMC,aAAa,GAAGF,gBAAgB,CACpC,uBAAuB,EACvB,OAAOG,MAAc,EAAEC,QAAQ,KAAK;EAClC,MAAMC,QAAQ,GAAG,MAAMC,OAAO,CAACC,SAAS,CAACJ,MAAM,CAAC;EAChD,OAAOE,QAAQ,CAACG,IAAI;AACtB,CACF,CAAC;AAED,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,UAAU,GAAGZ,WAAW,CAAC;EAC7Ba,IAAI,EAAE,OAAO;EACbH,YAAY;EACZI,QAAQ,EAAE;IACRC,QAAQA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACtBD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH;AAAS,CAAC,GAAGH,UAAU,CAACO,OAAO;AAC9C,eAAeP,UAAU,CAACQ,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}